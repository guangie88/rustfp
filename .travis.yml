sudo: false
language: cpp

git:
  submodules: true

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-5
      - g++-5
      - doxygen

matrix:
  include:
    # ubuntu 14.04, gcc-5
    - env: VER=5
      compiler: gcc
      os: linux
      dist: trusty
      addons: { apt: { packages: ["g++-5", "doxygen"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 14.04, gcc-6
    - env: VER=6
      compiler: gcc
      os: linux
      dist: trusty
      addons: { apt: { packages: ["g++-6", "doxygen"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 14.04, gcc-7
    - env: VER=7
      compiler: gcc
      os: linux
      dist: trusty
      addons: { apt: { packages: ["g++-7", "doxygen"], sources: ["ubuntu-toolchain-r-test"] } }

install:
  # set the correct `CC` and `CXX` environment variables.
  - |
    if [ -n "${VER}" ]; then
      export CC="${CC}-${VER}"
      export CXX="${CXX}-${VER}"
    fi
  - ${CXX} --version
  # directory for dependency installation.
  - DEPS="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS}
  # install newer cmake.
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update
      brew upgrade cmake
    elif [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      travis_retry wget --no-check-certificate https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.sh
      bash cmake-3.8.2-Linux-x86_64.sh --skip-license --prefix="${DEPS}"
      export PATH="${DEPS}/bin:${PATH}"
    fi

script:
  - BUILDS=(Debug Release)
  - mkdir build
  - pushd build
  - |
    for BUILD in "${BUILDS[@]}"; do
      (
        set -x
        cmake -DCMAKE_BUILD_TYPE="${BUILD}"          \
              -DCMAKE_INSTALL_PREFIX:PATH=install    \
              -DRUSTFP_INCLUDE_UNIT_TESTS=ON ..
      )
      cmake --build . --target install -- -j 2
      ctest -V
    done
  - popd

after_success:
  # generate document
  - doxygen Doxyfile
  # generate code coverage
  #- gcov ./build-debug/CMakeFiles/rustfp_unit_test.dir/src/rustfp_unit_test/unit_test.cpp.gcno
  #- bash <(curl -s https://codecov.io/bash)
